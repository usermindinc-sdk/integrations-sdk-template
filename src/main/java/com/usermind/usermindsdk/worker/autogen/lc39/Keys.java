package com.usermind.usermindsdk.worker.autogen.lc39;

import com.usermind.usermindsdk.worker.autogen.lc39.tables.*;
import com.usermind.usermindsdk.worker.autogen.lc39.tables.records.*;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

public class Keys {
    public static final Identity<ActionargsRecord, Long> IDENTITY_ACTIONARGS;
    public static final Identity<ActionjournalRecord, Long> IDENTITY_ACTIONJOURNAL;
    public static final Identity<ActionsRecord, Long> IDENTITY_ACTIONS;
    public static final Identity<ChannelentitiesRecord, Long> IDENTITY_CHANNELENTITIES;
    public static final Identity<ChannelsRecord, Long> IDENTITY_CHANNELS;
    public static final Identity<CronstateRecord, Long> IDENTITY_CRONSTATE;
    public static final Identity<EmailconfigurationsRecord, Long> IDENTITY_EMAILCONFIGURATIONS;
    public static final Identity<EntitiesRecord, Long> IDENTITY_ENTITIES;
    public static final Identity<EntitygraphsRecord, Long> IDENTITY_ENTITYGRAPHS;
    public static final Identity<EntityinstanceedgesRecord, Long> IDENTITY_ENTITYINSTANCEEDGES;
    public static final Identity<EntityinstancesRecord, Long> IDENTITY_ENTITYINSTANCES;
    public static final Identity<EntitytravelermapRecord, Long> IDENTITY_ENTITYTRAVELERMAP;
    public static final Identity<ExecguardstateRecord, Long> IDENTITY_EXECGUARDSTATE;
    public static final Identity<FetchrecordsRecord, Long> IDENTITY_FETCHRECORDS;
    public static final Identity<FieldsRecord, Long> IDENTITY_FIELDS;
    public static final Identity<IntegrationconfigsRecord, Long> IDENTITY_INTEGRATIONCONFIGS;
    public static final Identity<JourneystatesRecord, Long> IDENTITY_JOURNEYSTATES;
    public static final Identity<JourneysRecord, Long> IDENTITY_JOURNEYS;
    public static final Identity<MapsRecord, Long> IDENTITY_MAPS;
    public static final Identity<MilestonesRecord, Long> IDENTITY_MILESTONES;
    public static final Identity<OrganizationsRecord, Long> IDENTITY_ORGANIZATIONS;
    public static final Identity<PicklistitemsRecord, Long> IDENTITY_PICKLISTITEMS;
    public static final Identity<ProctriggersRecord, Long> IDENTITY_PROCTRIGGERS;
    public static final Identity<RulesRecord, Long> IDENTITY_RULES;
    public static final Identity<SmilestonesRecord, Long> IDENTITY_SMILESTONES;
    public static final Identity<StaticentitymapspecificationRecord, Long> IDENTITY_STATICENTITYMAPSPECIFICATION;
    public static final Identity<StaticentitymetadataRecord, Long> IDENTITY_STATICENTITYMETADATA;
    public static final Identity<TickschedulesRecord, Long> IDENTITY_TICKSCHEDULES;
    public static final Identity<TravelerchannelsRecord, Long> IDENTITY_TRAVELERCHANNELS;
    public static final Identity<TravelerrulestateRecord, Long> IDENTITY_TRAVELERRULESTATE;
    public static final Identity<TravelerstateRecord, Long> IDENTITY_TRAVELERSTATE;
    public static final Identity<TravelersRecord, Long> IDENTITY_TRAVELERS;
    public static final Identity<UmtransactionsRecord, Long> IDENTITY_UMTRANSACTIONS;
    public static final Identity<ActionJournalStatusRecord, Long> IDENTITY_ACTION_JOURNAL_STATUS;
    public static final Identity<CustomerStatusRecord, Long> IDENTITY_CUSTOMER_STATUS;
    public static final Identity<FaqwadMessagesRecord, Long> IDENTITY_FAQWAD_MESSAGES;
    public static final Identity<TravelerEventsRecord, Long> IDENTITY_TRAVELER_EVENTS;
    public static final UniqueKey<ActionargsRecord> ACTIONARGS_PKEY;
    public static final UniqueKey<ActionjournalRecord> ACTIONJOURNAL_PKEY;
    public static final UniqueKey<ActionsRecord> ACTIONS_PKEY;
    public static final UniqueKey<ChannelentitiesRecord> CHANNELENTITIES_PKEY;
    public static final UniqueKey<ChannelsRecord> CHANNELS_PKEY;
    public static final UniqueKey<CronstateRecord> CRONSTATE_PKEY;
    public static final UniqueKey<EmailconfigurationsRecord> PK_EMAILCONFIGURATIONS;
    public static final UniqueKey<EmailconfigurationsRecord> EMAILCONFIGURATIONS_ORGANIZATION_ID_JOURNEY_ID_RULE_ID_VERSION_;
    public static final UniqueKey<EntitiesRecord> ENTITIES_PKEY;
    public static final UniqueKey<EntitiesRecord> ENTITIES_ORGANIZATION_ID_CHANNEL_ID_NAME_KEY;
    public static final UniqueKey<EntitygraphsRecord> ENTITYGRAPHS_PKEY;
    public static final UniqueKey<EntityinstanceedgesRecord> ENTITYINSTANCEEDGES_PKEY;
    public static final UniqueKey<EntityinstancesRecord> ENTITYINSTANCES_PKEY;
    public static final UniqueKey<EntitytravelermapRecord> ENTITYTRAVELERMAP_PKEY;
    public static final UniqueKey<ExecguardstateRecord> EXECGUARDSTATE_PKEY;
    public static final UniqueKey<FetchrecordsRecord> SFFETCHRECORDS_PKEY;
    public static final UniqueKey<FieldsRecord> FIELDS_PKEY;
    public static final UniqueKey<IntegrationconfigsRecord> INTEGRATIONCONFIGS_PKEY;
    public static final UniqueKey<JourneystatesRecord> PK_JOURNEYSTATES;
    public static final UniqueKey<JourneystatesRecord> JOURNEYSTATES_JOURNEY_STATE_NAME_KEY;
    public static final UniqueKey<JourneysRecord> JOURNEYS_PKEY;
    public static final UniqueKey<MapsRecord> PK_MAPS;
    public static final UniqueKey<MilestonesRecord> MILESTONES_PKEY;
    public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_PKEY;
    public static final UniqueKey<PicklistitemsRecord> PICKLISTITEMS_PKEY;
    public static final UniqueKey<RulesRecord> RULES_PKEY;
    public static final UniqueKey<SmilestonesRecord> SMILESTONES_PKEY;
    public static final UniqueKey<SmilestonesRecord> SMILESTONES_MILESTONE_ID_VERSION_KEY;
    public static final UniqueKey<StaticentitymapspecificationRecord> STATICENTITYMAPSPECIFICATION_PKEY;
    public static final UniqueKey<StaticentitymapspecificationRecord> PERORGEDGELABEL_UNIQUE;
    public static final UniqueKey<StaticentitymetadataRecord> STATICENTITYMETADATA_PKEY;
    public static final UniqueKey<TickschedulesRecord> PK_TICKSCHEDULES;
    public static final UniqueKey<TravelerchannelsRecord> TRAVELERCHANNELS_PKEY;
    public static final UniqueKey<TravelerrulestateRecord> TRAVELERRULESTATE_PKEY;
    public static final UniqueKey<TravelerstateRecord> STATUS_PKEY;
    public static final UniqueKey<UmtransactionsRecord> UMTRANSACTIONS_PKEY;
    public static final UniqueKey<ActionJournalStatusRecord> PK_ACTION_JOURNAL_STATUS;
    public static final UniqueKey<ActionJournalStatusRecord> ACTION_JOURNAL_STATUS_ACTION_JOURNAL_STATUS_NAME_KEY;
    public static final UniqueKey<CustomerStatusRecord> PK_CUSTOMER_STATUS;
    public static final UniqueKey<CustomerStatusRecord> CUSTOMER_STATUS_CUSTOMER_STATUS_NAME_KEY;
    public static final UniqueKey<FaqwadMessagesRecord> PK_FAQWAD_MESSAGES;
    public static final UniqueKey<FaqwadMessagesRecord> FAQWAD_UNIQUE_MESSAGE_TIMESTAMP_OFFSET_CONSTRAINT;
    public static final UniqueKey<FaqwadQueueDefinitionsRecord> PK_FAQWAD_QUEUE_DEFINITIONS;
    public static final UniqueKey<FaqwadQueueDefinitionsRecord> FAQWAD_QUEUE_DEFINITIONS_FAQWAD_QUEUE_NAME_KEY;
    public static final UniqueKey<FaqwadStatesRecord> PK_FAQWAD_STATES;
    public static final UniqueKey<FaqwadStatesRecord> FAQWAD_STATES_FAQWAD_STATE_NAME_KEY;
    public static final UniqueKey<FaqwadTypesRecord> PK_FAQWAD_TYPES;
    public static final UniqueKey<FaqwadTypesRecord> FAQWAD_TYPES_FAQWAD_TYPE_NAME_KEY;
    public static final UniqueKey<TravelerEventStatesRecord> PK_TRAVELER_EVENT_STATES;
    public static final UniqueKey<TravelerEventStatesRecord> TRAVELER_EVENT_STATES_TRAVELER_EVENT_STATE_NAME_KEY;
    public static final UniqueKey<TravelerEventTypesRecord> PK_TRAVELER_EVENT_TYPES;
    public static final UniqueKey<TravelerEventTypesRecord> TRAVELER_EVENT_TYPES_TRAVELER_EVENT_TYPE_NAME_KEY;
    public static final UniqueKey<TravelerEventsRecord> PK_TRAVELER_EVENTS;
    public static final UniqueKey<TravelerEventsRecord> TE_UNIQUE_TRAVELER_TIMESTAMP_OFFSET_CONSTRAINT;
    public static final ForeignKey<ActionjournalRecord, ActionJournalStatusRecord> ACTIONJOURNAL__FK_ACTIONJOURNALSTATUS;
    public static final ForeignKey<EntitygraphsRecord, MapsRecord> ENTITYGRAPHS__FK_ENTITYGRAPHS_MAP_SPEC;
    public static final ForeignKey<EntityinstanceedgesRecord, MapsRecord> ENTITYINSTANCEEDGES__FK_ENTITYINSTANCE_EDGES_MAP_SPEC;
    public static final ForeignKey<EntityinstancesRecord, MapsRecord> ENTITYINSTANCES__FK_ENTITYINSTANCES_MAP_SPEC;
    public static final ForeignKey<JourneysRecord, MapsRecord> JOURNEYS__FK_JOURNEY_MAP_SPEC;
    public static final ForeignKey<JourneysRecord, JourneystatesRecord> JOURNEYS__FK_JOURNEYS_STATE;
    public static final ForeignKey<OrganizationsRecord, CustomerStatusRecord> ORGANIZATIONS__FK_CUSTOMER_STATUS;
    public static final ForeignKey<ProctriggersRecord, MapsRecord> PROCTRIGGERS__FK_PROCTRIGGERS_MAP_SPEC;
    public static final ForeignKey<RulesRecord, SmilestonesRecord> RULES__FK_RULESMILESTONEIDANDVERSION;
    public static final ForeignKey<StaticentitymetadataRecord, MapsRecord> STATICENTITYMETADATA__FK_STATICENTITYMETADATA_MAP_SPEC;
    public static final ForeignKey<FaqwadMessagesRecord, FaqwadQueueDefinitionsRecord> FAQWAD_MESSAGES__FAQWAD_QUEUE_DEFINITION_ID_FK;
    public static final ForeignKey<FaqwadMessagesRecord, FaqwadTypesRecord> FAQWAD_MESSAGES__FAQWAD_TYPE_ID_FK;
    public static final ForeignKey<FaqwadMessagesRecord, FaqwadStatesRecord> FAQWAD_MESSAGES__FAQWAD_STATE_ID_FK;
    public static final ForeignKey<TravelerEventsRecord, TravelerEventTypesRecord> TRAVELER_EVENTS__TRAVELER_EVENT_TYPE_ID_FK;
    public static final ForeignKey<TravelerEventsRecord, TravelerEventStatesRecord> TRAVELER_EVENTS__TRAVELER_EVENT_STATE_ID_FK;

    public Keys() {
    }

    static {
        IDENTITY_ACTIONARGS = Keys.Identities0.IDENTITY_ACTIONARGS;
        IDENTITY_ACTIONJOURNAL = Keys.Identities0.IDENTITY_ACTIONJOURNAL;
        IDENTITY_ACTIONS = Keys.Identities0.IDENTITY_ACTIONS;
        IDENTITY_CHANNELENTITIES = Keys.Identities0.IDENTITY_CHANNELENTITIES;
        IDENTITY_CHANNELS = Keys.Identities0.IDENTITY_CHANNELS;
        IDENTITY_CRONSTATE = Keys.Identities0.IDENTITY_CRONSTATE;
        IDENTITY_EMAILCONFIGURATIONS = Keys.Identities0.IDENTITY_EMAILCONFIGURATIONS;
        IDENTITY_ENTITIES = Keys.Identities0.IDENTITY_ENTITIES;
        IDENTITY_ENTITYGRAPHS = Keys.Identities0.IDENTITY_ENTITYGRAPHS;
        IDENTITY_ENTITYINSTANCEEDGES = Keys.Identities0.IDENTITY_ENTITYINSTANCEEDGES;
        IDENTITY_ENTITYINSTANCES = Keys.Identities0.IDENTITY_ENTITYINSTANCES;
        IDENTITY_ENTITYTRAVELERMAP = Keys.Identities0.IDENTITY_ENTITYTRAVELERMAP;
        IDENTITY_EXECGUARDSTATE = Keys.Identities0.IDENTITY_EXECGUARDSTATE;
        IDENTITY_FETCHRECORDS = Keys.Identities0.IDENTITY_FETCHRECORDS;
        IDENTITY_FIELDS = Keys.Identities0.IDENTITY_FIELDS;
        IDENTITY_INTEGRATIONCONFIGS = Keys.Identities0.IDENTITY_INTEGRATIONCONFIGS;
        IDENTITY_JOURNEYSTATES = Keys.Identities0.IDENTITY_JOURNEYSTATES;
        IDENTITY_JOURNEYS = Keys.Identities0.IDENTITY_JOURNEYS;
        IDENTITY_MAPS = Keys.Identities0.IDENTITY_MAPS;
        IDENTITY_MILESTONES = Keys.Identities0.IDENTITY_MILESTONES;
        IDENTITY_ORGANIZATIONS = Keys.Identities0.IDENTITY_ORGANIZATIONS;
        IDENTITY_PICKLISTITEMS = Keys.Identities0.IDENTITY_PICKLISTITEMS;
        IDENTITY_PROCTRIGGERS = Keys.Identities0.IDENTITY_PROCTRIGGERS;
        IDENTITY_RULES = Keys.Identities0.IDENTITY_RULES;
        IDENTITY_SMILESTONES = Keys.Identities0.IDENTITY_SMILESTONES;
        IDENTITY_STATICENTITYMAPSPECIFICATION = Keys.Identities0.IDENTITY_STATICENTITYMAPSPECIFICATION;
        IDENTITY_STATICENTITYMETADATA = Keys.Identities0.IDENTITY_STATICENTITYMETADATA;
        IDENTITY_TICKSCHEDULES = Keys.Identities0.IDENTITY_TICKSCHEDULES;
        IDENTITY_TRAVELERCHANNELS = Keys.Identities0.IDENTITY_TRAVELERCHANNELS;
        IDENTITY_TRAVELERRULESTATE = Keys.Identities0.IDENTITY_TRAVELERRULESTATE;
        IDENTITY_TRAVELERSTATE = Keys.Identities0.IDENTITY_TRAVELERSTATE;
        IDENTITY_TRAVELERS = Keys.Identities0.IDENTITY_TRAVELERS;
        IDENTITY_UMTRANSACTIONS = Keys.Identities0.IDENTITY_UMTRANSACTIONS;
        IDENTITY_ACTION_JOURNAL_STATUS = Keys.Identities0.IDENTITY_ACTION_JOURNAL_STATUS;
        IDENTITY_CUSTOMER_STATUS = Keys.Identities0.IDENTITY_CUSTOMER_STATUS;
        IDENTITY_FAQWAD_MESSAGES = Keys.Identities0.IDENTITY_FAQWAD_MESSAGES;
        IDENTITY_TRAVELER_EVENTS = Keys.Identities0.IDENTITY_TRAVELER_EVENTS;
        ACTIONARGS_PKEY = Keys.UniqueKeys0.ACTIONARGS_PKEY;
        ACTIONJOURNAL_PKEY = Keys.UniqueKeys0.ACTIONJOURNAL_PKEY;
        ACTIONS_PKEY = Keys.UniqueKeys0.ACTIONS_PKEY;
        CHANNELENTITIES_PKEY = Keys.UniqueKeys0.CHANNELENTITIES_PKEY;
        CHANNELS_PKEY = Keys.UniqueKeys0.CHANNELS_PKEY;
        CRONSTATE_PKEY = Keys.UniqueKeys0.CRONSTATE_PKEY;
        PK_EMAILCONFIGURATIONS = Keys.UniqueKeys0.PK_EMAILCONFIGURATIONS;
        EMAILCONFIGURATIONS_ORGANIZATION_ID_JOURNEY_ID_RULE_ID_VERSION_ = Keys.UniqueKeys0.EMAILCONFIGURATIONS_ORGANIZATION_ID_JOURNEY_ID_RULE_ID_VERSION_;
        ENTITIES_PKEY = Keys.UniqueKeys0.ENTITIES_PKEY;
        ENTITIES_ORGANIZATION_ID_CHANNEL_ID_NAME_KEY = Keys.UniqueKeys0.ENTITIES_ORGANIZATION_ID_CHANNEL_ID_NAME_KEY;
        ENTITYGRAPHS_PKEY = Keys.UniqueKeys0.ENTITYGRAPHS_PKEY;
        ENTITYINSTANCEEDGES_PKEY = Keys.UniqueKeys0.ENTITYINSTANCEEDGES_PKEY;
        ENTITYINSTANCES_PKEY = Keys.UniqueKeys0.ENTITYINSTANCES_PKEY;
        ENTITYTRAVELERMAP_PKEY = Keys.UniqueKeys0.ENTITYTRAVELERMAP_PKEY;
        EXECGUARDSTATE_PKEY = Keys.UniqueKeys0.EXECGUARDSTATE_PKEY;
        SFFETCHRECORDS_PKEY = Keys.UniqueKeys0.SFFETCHRECORDS_PKEY;
        FIELDS_PKEY = Keys.UniqueKeys0.FIELDS_PKEY;
        INTEGRATIONCONFIGS_PKEY = Keys.UniqueKeys0.INTEGRATIONCONFIGS_PKEY;
        PK_JOURNEYSTATES = Keys.UniqueKeys0.PK_JOURNEYSTATES;
        JOURNEYSTATES_JOURNEY_STATE_NAME_KEY = Keys.UniqueKeys0.JOURNEYSTATES_JOURNEY_STATE_NAME_KEY;
        JOURNEYS_PKEY = Keys.UniqueKeys0.JOURNEYS_PKEY;
        PK_MAPS = Keys.UniqueKeys0.PK_MAPS;
        MILESTONES_PKEY = Keys.UniqueKeys0.MILESTONES_PKEY;
        ORGANIZATIONS_PKEY = Keys.UniqueKeys0.ORGANIZATIONS_PKEY;
        PICKLISTITEMS_PKEY = Keys.UniqueKeys0.PICKLISTITEMS_PKEY;
        RULES_PKEY = Keys.UniqueKeys0.RULES_PKEY;
        SMILESTONES_PKEY = Keys.UniqueKeys0.SMILESTONES_PKEY;
        SMILESTONES_MILESTONE_ID_VERSION_KEY = Keys.UniqueKeys0.SMILESTONES_MILESTONE_ID_VERSION_KEY;
        STATICENTITYMAPSPECIFICATION_PKEY = Keys.UniqueKeys0.STATICENTITYMAPSPECIFICATION_PKEY;
        PERORGEDGELABEL_UNIQUE = Keys.UniqueKeys0.PERORGEDGELABEL_UNIQUE;
        STATICENTITYMETADATA_PKEY = Keys.UniqueKeys0.STATICENTITYMETADATA_PKEY;
        PK_TICKSCHEDULES = Keys.UniqueKeys0.PK_TICKSCHEDULES;
        TRAVELERCHANNELS_PKEY = Keys.UniqueKeys0.TRAVELERCHANNELS_PKEY;
        TRAVELERRULESTATE_PKEY = Keys.UniqueKeys0.TRAVELERRULESTATE_PKEY;
        STATUS_PKEY = Keys.UniqueKeys0.STATUS_PKEY;
        UMTRANSACTIONS_PKEY = Keys.UniqueKeys0.UMTRANSACTIONS_PKEY;
        PK_ACTION_JOURNAL_STATUS = Keys.UniqueKeys0.PK_ACTION_JOURNAL_STATUS;
        ACTION_JOURNAL_STATUS_ACTION_JOURNAL_STATUS_NAME_KEY = Keys.UniqueKeys0.ACTION_JOURNAL_STATUS_ACTION_JOURNAL_STATUS_NAME_KEY;
        PK_CUSTOMER_STATUS = Keys.UniqueKeys0.PK_CUSTOMER_STATUS;
        CUSTOMER_STATUS_CUSTOMER_STATUS_NAME_KEY = Keys.UniqueKeys0.CUSTOMER_STATUS_CUSTOMER_STATUS_NAME_KEY;
        PK_FAQWAD_MESSAGES = Keys.UniqueKeys0.PK_FAQWAD_MESSAGES;
        FAQWAD_UNIQUE_MESSAGE_TIMESTAMP_OFFSET_CONSTRAINT = Keys.UniqueKeys0.FAQWAD_UNIQUE_MESSAGE_TIMESTAMP_OFFSET_CONSTRAINT;
        PK_FAQWAD_QUEUE_DEFINITIONS = Keys.UniqueKeys0.PK_FAQWAD_QUEUE_DEFINITIONS;
        FAQWAD_QUEUE_DEFINITIONS_FAQWAD_QUEUE_NAME_KEY = Keys.UniqueKeys0.FAQWAD_QUEUE_DEFINITIONS_FAQWAD_QUEUE_NAME_KEY;
        PK_FAQWAD_STATES = Keys.UniqueKeys0.PK_FAQWAD_STATES;
        FAQWAD_STATES_FAQWAD_STATE_NAME_KEY = Keys.UniqueKeys0.FAQWAD_STATES_FAQWAD_STATE_NAME_KEY;
        PK_FAQWAD_TYPES = Keys.UniqueKeys0.PK_FAQWAD_TYPES;
        FAQWAD_TYPES_FAQWAD_TYPE_NAME_KEY = Keys.UniqueKeys0.FAQWAD_TYPES_FAQWAD_TYPE_NAME_KEY;
        PK_TRAVELER_EVENT_STATES = Keys.UniqueKeys0.PK_TRAVELER_EVENT_STATES;
        TRAVELER_EVENT_STATES_TRAVELER_EVENT_STATE_NAME_KEY = Keys.UniqueKeys0.TRAVELER_EVENT_STATES_TRAVELER_EVENT_STATE_NAME_KEY;
        PK_TRAVELER_EVENT_TYPES = Keys.UniqueKeys0.PK_TRAVELER_EVENT_TYPES;
        TRAVELER_EVENT_TYPES_TRAVELER_EVENT_TYPE_NAME_KEY = Keys.UniqueKeys0.TRAVELER_EVENT_TYPES_TRAVELER_EVENT_TYPE_NAME_KEY;
        PK_TRAVELER_EVENTS = Keys.UniqueKeys0.PK_TRAVELER_EVENTS;
        TE_UNIQUE_TRAVELER_TIMESTAMP_OFFSET_CONSTRAINT = Keys.UniqueKeys0.TE_UNIQUE_TRAVELER_TIMESTAMP_OFFSET_CONSTRAINT;
        ACTIONJOURNAL__FK_ACTIONJOURNALSTATUS = Keys.ForeignKeys0.ACTIONJOURNAL__FK_ACTIONJOURNALSTATUS;
        ENTITYGRAPHS__FK_ENTITYGRAPHS_MAP_SPEC = Keys.ForeignKeys0.ENTITYGRAPHS__FK_ENTITYGRAPHS_MAP_SPEC;
        ENTITYINSTANCEEDGES__FK_ENTITYINSTANCE_EDGES_MAP_SPEC = Keys.ForeignKeys0.ENTITYINSTANCEEDGES__FK_ENTITYINSTANCE_EDGES_MAP_SPEC;
        ENTITYINSTANCES__FK_ENTITYINSTANCES_MAP_SPEC = Keys.ForeignKeys0.ENTITYINSTANCES__FK_ENTITYINSTANCES_MAP_SPEC;
        JOURNEYS__FK_JOURNEY_MAP_SPEC = Keys.ForeignKeys0.JOURNEYS__FK_JOURNEY_MAP_SPEC;
        JOURNEYS__FK_JOURNEYS_STATE = Keys.ForeignKeys0.JOURNEYS__FK_JOURNEYS_STATE;
        ORGANIZATIONS__FK_CUSTOMER_STATUS = Keys.ForeignKeys0.ORGANIZATIONS__FK_CUSTOMER_STATUS;
        PROCTRIGGERS__FK_PROCTRIGGERS_MAP_SPEC = Keys.ForeignKeys0.PROCTRIGGERS__FK_PROCTRIGGERS_MAP_SPEC;
        RULES__FK_RULESMILESTONEIDANDVERSION = Keys.ForeignKeys0.RULES__FK_RULESMILESTONEIDANDVERSION;
        STATICENTITYMETADATA__FK_STATICENTITYMETADATA_MAP_SPEC = Keys.ForeignKeys0.STATICENTITYMETADATA__FK_STATICENTITYMETADATA_MAP_SPEC;
        FAQWAD_MESSAGES__FAQWAD_QUEUE_DEFINITION_ID_FK = Keys.ForeignKeys0.FAQWAD_MESSAGES__FAQWAD_QUEUE_DEFINITION_ID_FK;
        FAQWAD_MESSAGES__FAQWAD_TYPE_ID_FK = Keys.ForeignKeys0.FAQWAD_MESSAGES__FAQWAD_TYPE_ID_FK;
        FAQWAD_MESSAGES__FAQWAD_STATE_ID_FK = Keys.ForeignKeys0.FAQWAD_MESSAGES__FAQWAD_STATE_ID_FK;
        TRAVELER_EVENTS__TRAVELER_EVENT_TYPE_ID_FK = Keys.ForeignKeys0.TRAVELER_EVENTS__TRAVELER_EVENT_TYPE_ID_FK;
        TRAVELER_EVENTS__TRAVELER_EVENT_STATE_ID_FK = Keys.ForeignKeys0.TRAVELER_EVENTS__TRAVELER_EVENT_STATE_ID_FK;
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<ActionjournalRecord, ActionJournalStatusRecord> ACTIONJOURNAL__FK_ACTIONJOURNALSTATUS;
        public static final ForeignKey<EntitygraphsRecord, MapsRecord> ENTITYGRAPHS__FK_ENTITYGRAPHS_MAP_SPEC;
        public static final ForeignKey<EntityinstanceedgesRecord, MapsRecord> ENTITYINSTANCEEDGES__FK_ENTITYINSTANCE_EDGES_MAP_SPEC;
        public static final ForeignKey<EntityinstancesRecord, MapsRecord> ENTITYINSTANCES__FK_ENTITYINSTANCES_MAP_SPEC;
        public static final ForeignKey<JourneysRecord, MapsRecord> JOURNEYS__FK_JOURNEY_MAP_SPEC;
        public static final ForeignKey<JourneysRecord, JourneystatesRecord> JOURNEYS__FK_JOURNEYS_STATE;
        public static final ForeignKey<OrganizationsRecord, CustomerStatusRecord> ORGANIZATIONS__FK_CUSTOMER_STATUS;
        public static final ForeignKey<ProctriggersRecord, MapsRecord> PROCTRIGGERS__FK_PROCTRIGGERS_MAP_SPEC;
        public static final ForeignKey<RulesRecord, SmilestonesRecord> RULES__FK_RULESMILESTONEIDANDVERSION;
        public static final ForeignKey<StaticentitymetadataRecord, MapsRecord> STATICENTITYMETADATA__FK_STATICENTITYMETADATA_MAP_SPEC;
        public static final ForeignKey<FaqwadMessagesRecord, FaqwadQueueDefinitionsRecord> FAQWAD_MESSAGES__FAQWAD_QUEUE_DEFINITION_ID_FK;
        public static final ForeignKey<FaqwadMessagesRecord, FaqwadTypesRecord> FAQWAD_MESSAGES__FAQWAD_TYPE_ID_FK;
        public static final ForeignKey<FaqwadMessagesRecord, FaqwadStatesRecord> FAQWAD_MESSAGES__FAQWAD_STATE_ID_FK;
        public static final ForeignKey<TravelerEventsRecord, TravelerEventTypesRecord> TRAVELER_EVENTS__TRAVELER_EVENT_TYPE_ID_FK;
        public static final ForeignKey<TravelerEventsRecord, TravelerEventStatesRecord> TRAVELER_EVENTS__TRAVELER_EVENT_STATE_ID_FK;

        private ForeignKeys0() {
        }

        static {
            ACTIONJOURNAL__FK_ACTIONJOURNALSTATUS = createForeignKey(Keys.PK_ACTION_JOURNAL_STATUS, Actionjournal.ACTIONJOURNAL, "ActionJournal__fk_ActionJournalStatus", new TableField[]{Actionjournal.ACTIONJOURNAL.STATUS});
            ENTITYGRAPHS__FK_ENTITYGRAPHS_MAP_SPEC = createForeignKey(Keys.PK_MAPS, Entitygraphs.ENTITYGRAPHS, "EntityGraphs__fk_entitygraphs_map_spec", new TableField[]{Entitygraphs.ENTITYGRAPHS.MAP_SPEC_ID});
            ENTITYINSTANCEEDGES__FK_ENTITYINSTANCE_EDGES_MAP_SPEC = createForeignKey(Keys.PK_MAPS, Entityinstanceedges.ENTITYINSTANCEEDGES, "EntityInstanceEdges__fk_entityinstance_edges_map_spec", new TableField[]{Entityinstanceedges.ENTITYINSTANCEEDGES.MAP_SPEC_ID});
            ENTITYINSTANCES__FK_ENTITYINSTANCES_MAP_SPEC = createForeignKey(Keys.PK_MAPS, Entityinstances.ENTITYINSTANCES, "EntityInstances__fk_entityinstances_map_spec", new TableField[]{Entityinstances.ENTITYINSTANCES.MAP_SPEC_ID});
            JOURNEYS__FK_JOURNEY_MAP_SPEC = createForeignKey(Keys.PK_MAPS, Journeys.JOURNEYS, "Journeys__fk_journey_map_spec", new TableField[]{Journeys.JOURNEYS.MAP_SPEC_ID});
            JOURNEYS__FK_JOURNEYS_STATE = createForeignKey(Keys.PK_JOURNEYSTATES, Journeys.JOURNEYS, "Journeys__fk_journeys_state", new TableField[]{Journeys.JOURNEYS.JOURNEY_STATE});
            ORGANIZATIONS__FK_CUSTOMER_STATUS = createForeignKey(Keys.PK_CUSTOMER_STATUS, Organizations.ORGANIZATIONS, "Organizations__fk_customer_status", new TableField[]{Organizations.ORGANIZATIONS.CUSTOMER_STATUS});
            PROCTRIGGERS__FK_PROCTRIGGERS_MAP_SPEC = createForeignKey(Keys.PK_MAPS, Proctriggers.PROCTRIGGERS, "ProcTriggers__fk_proctriggers_map_spec", new TableField[]{Proctriggers.PROCTRIGGERS.MAP_SPEC_ID});
            RULES__FK_RULESMILESTONEIDANDVERSION = createForeignKey(Keys.SMILESTONES_MILESTONE_ID_VERSION_KEY, Rules.RULES, "Rules__fk_RulesMilestoneIdAndVersion", new TableField[]{Rules.RULES.MILESTONE_ID, Rules.RULES.MILESTONE_VERSION});
            STATICENTITYMETADATA__FK_STATICENTITYMETADATA_MAP_SPEC = createForeignKey(Keys.PK_MAPS, Staticentitymetadata.STATICENTITYMETADATA, "StaticEntityMetadata__fk_staticentitymetadata_map_spec", new TableField[]{Staticentitymetadata.STATICENTITYMETADATA.MAP_SPEC_ID});
            FAQWAD_MESSAGES__FAQWAD_QUEUE_DEFINITION_ID_FK = createForeignKey(Keys.PK_FAQWAD_QUEUE_DEFINITIONS, FaqwadMessages.FAQWAD_MESSAGES, "faqwad_messages__faqwad_queue_definition_id_fk", new TableField[]{FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_QUEUE_DEFINITION_ID});
            FAQWAD_MESSAGES__FAQWAD_TYPE_ID_FK = createForeignKey(Keys.PK_FAQWAD_TYPES, FaqwadMessages.FAQWAD_MESSAGES, "faqwad_messages__faqwad_type_id_fk", new TableField[]{FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_TYPE_ID});
            FAQWAD_MESSAGES__FAQWAD_STATE_ID_FK = createForeignKey(Keys.PK_FAQWAD_STATES, FaqwadMessages.FAQWAD_MESSAGES, "faqwad_messages__faqwad_state_id_fk", new TableField[]{FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_STATE_ID});
            TRAVELER_EVENTS__TRAVELER_EVENT_TYPE_ID_FK = createForeignKey(Keys.PK_TRAVELER_EVENT_TYPES, TravelerEvents.TRAVELER_EVENTS, "traveler_events__traveler_event_type_id_fk", new TableField[]{TravelerEvents.TRAVELER_EVENTS.TRAVELER_EVENT_TYPE_ID});
            TRAVELER_EVENTS__TRAVELER_EVENT_STATE_ID_FK = createForeignKey(Keys.PK_TRAVELER_EVENT_STATES, TravelerEvents.TRAVELER_EVENTS, "traveler_events__traveler_event_state_id_fk", new TableField[]{TravelerEvents.TRAVELER_EVENTS.TRAVELER_EVENT_STATE_ID});
        }
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<ActionargsRecord> ACTIONARGS_PKEY;
        public static final UniqueKey<ActionjournalRecord> ACTIONJOURNAL_PKEY;
        public static final UniqueKey<ActionsRecord> ACTIONS_PKEY;
        public static final UniqueKey<ChannelentitiesRecord> CHANNELENTITIES_PKEY;
        public static final UniqueKey<ChannelsRecord> CHANNELS_PKEY;
        public static final UniqueKey<CronstateRecord> CRONSTATE_PKEY;
        public static final UniqueKey<EmailconfigurationsRecord> PK_EMAILCONFIGURATIONS;
        public static final UniqueKey<EmailconfigurationsRecord> EMAILCONFIGURATIONS_ORGANIZATION_ID_JOURNEY_ID_RULE_ID_VERSION_;
        public static final UniqueKey<EntitiesRecord> ENTITIES_PKEY;
        public static final UniqueKey<EntitiesRecord> ENTITIES_ORGANIZATION_ID_CHANNEL_ID_NAME_KEY;
        public static final UniqueKey<EntitygraphsRecord> ENTITYGRAPHS_PKEY;
        public static final UniqueKey<EntityinstanceedgesRecord> ENTITYINSTANCEEDGES_PKEY;
        public static final UniqueKey<EntityinstancesRecord> ENTITYINSTANCES_PKEY;
        public static final UniqueKey<EntitytravelermapRecord> ENTITYTRAVELERMAP_PKEY;
        public static final UniqueKey<ExecguardstateRecord> EXECGUARDSTATE_PKEY;
        public static final UniqueKey<FetchrecordsRecord> SFFETCHRECORDS_PKEY;
        public static final UniqueKey<FieldsRecord> FIELDS_PKEY;
        public static final UniqueKey<IntegrationconfigsRecord> INTEGRATIONCONFIGS_PKEY;
        public static final UniqueKey<JourneystatesRecord> PK_JOURNEYSTATES;
        public static final UniqueKey<JourneystatesRecord> JOURNEYSTATES_JOURNEY_STATE_NAME_KEY;
        public static final UniqueKey<JourneysRecord> JOURNEYS_PKEY;
        public static final UniqueKey<MapsRecord> PK_MAPS;
        public static final UniqueKey<MilestonesRecord> MILESTONES_PKEY;
        public static final UniqueKey<OrganizationsRecord> ORGANIZATIONS_PKEY;
        public static final UniqueKey<PicklistitemsRecord> PICKLISTITEMS_PKEY;
        public static final UniqueKey<RulesRecord> RULES_PKEY;
        public static final UniqueKey<SmilestonesRecord> SMILESTONES_PKEY;
        public static final UniqueKey<SmilestonesRecord> SMILESTONES_MILESTONE_ID_VERSION_KEY;
        public static final UniqueKey<StaticentitymapspecificationRecord> STATICENTITYMAPSPECIFICATION_PKEY;
        public static final UniqueKey<StaticentitymapspecificationRecord> PERORGEDGELABEL_UNIQUE;
        public static final UniqueKey<StaticentitymetadataRecord> STATICENTITYMETADATA_PKEY;
        public static final UniqueKey<TickschedulesRecord> PK_TICKSCHEDULES;
        public static final UniqueKey<TravelerchannelsRecord> TRAVELERCHANNELS_PKEY;
        public static final UniqueKey<TravelerrulestateRecord> TRAVELERRULESTATE_PKEY;
        public static final UniqueKey<TravelerstateRecord> STATUS_PKEY;
        public static final UniqueKey<UmtransactionsRecord> UMTRANSACTIONS_PKEY;
        public static final UniqueKey<ActionJournalStatusRecord> PK_ACTION_JOURNAL_STATUS;
        public static final UniqueKey<ActionJournalStatusRecord> ACTION_JOURNAL_STATUS_ACTION_JOURNAL_STATUS_NAME_KEY;
        public static final UniqueKey<CustomerStatusRecord> PK_CUSTOMER_STATUS;
        public static final UniqueKey<CustomerStatusRecord> CUSTOMER_STATUS_CUSTOMER_STATUS_NAME_KEY;
        public static final UniqueKey<FaqwadMessagesRecord> PK_FAQWAD_MESSAGES;
        public static final UniqueKey<FaqwadMessagesRecord> FAQWAD_UNIQUE_MESSAGE_TIMESTAMP_OFFSET_CONSTRAINT;
        public static final UniqueKey<FaqwadQueueDefinitionsRecord> PK_FAQWAD_QUEUE_DEFINITIONS;
        public static final UniqueKey<FaqwadQueueDefinitionsRecord> FAQWAD_QUEUE_DEFINITIONS_FAQWAD_QUEUE_NAME_KEY;
        public static final UniqueKey<FaqwadStatesRecord> PK_FAQWAD_STATES;
        public static final UniqueKey<FaqwadStatesRecord> FAQWAD_STATES_FAQWAD_STATE_NAME_KEY;
        public static final UniqueKey<FaqwadTypesRecord> PK_FAQWAD_TYPES;
        public static final UniqueKey<FaqwadTypesRecord> FAQWAD_TYPES_FAQWAD_TYPE_NAME_KEY;
        public static final UniqueKey<TravelerEventStatesRecord> PK_TRAVELER_EVENT_STATES;
        public static final UniqueKey<TravelerEventStatesRecord> TRAVELER_EVENT_STATES_TRAVELER_EVENT_STATE_NAME_KEY;
        public static final UniqueKey<TravelerEventTypesRecord> PK_TRAVELER_EVENT_TYPES;
        public static final UniqueKey<TravelerEventTypesRecord> TRAVELER_EVENT_TYPES_TRAVELER_EVENT_TYPE_NAME_KEY;
        public static final UniqueKey<TravelerEventsRecord> PK_TRAVELER_EVENTS;
        public static final UniqueKey<TravelerEventsRecord> TE_UNIQUE_TRAVELER_TIMESTAMP_OFFSET_CONSTRAINT;

        private UniqueKeys0() {
        }

        static {
            ACTIONARGS_PKEY = createUniqueKey(Actionargs.ACTIONARGS, "ActionArgs_pkey", new TableField[]{Actionargs.ACTIONARGS.ID});
            ACTIONJOURNAL_PKEY = createUniqueKey(Actionjournal.ACTIONJOURNAL, "ActionJournal_pkey", new TableField[]{Actionjournal.ACTIONJOURNAL.ID});
            ACTIONS_PKEY = createUniqueKey(Actions.ACTIONS, "Actions_pkey", new TableField[]{Actions.ACTIONS.ID});
            CHANNELENTITIES_PKEY = createUniqueKey(Channelentities.CHANNELENTITIES, "ChannelEntities_pkey", new TableField[]{Channelentities.CHANNELENTITIES.ID});
            CHANNELS_PKEY = createUniqueKey(Channels.CHANNELS, "Channels_pkey", new TableField[]{Channels.CHANNELS.ID});
            CRONSTATE_PKEY = createUniqueKey(Cronstate.CRONSTATE, "CronState_pkey", new TableField[]{Cronstate.CRONSTATE.ID});
            PK_EMAILCONFIGURATIONS = createUniqueKey(Emailconfigurations.EMAILCONFIGURATIONS, "pk_emailconfigurations", new TableField[]{Emailconfigurations.EMAILCONFIGURATIONS.ID});
            EMAILCONFIGURATIONS_ORGANIZATION_ID_JOURNEY_ID_RULE_ID_VERSION_ = createUniqueKey(Emailconfigurations.EMAILCONFIGURATIONS, "EmailConfigurations_organization_id_journey_id_rule_id_version_", new TableField[]{Emailconfigurations.EMAILCONFIGURATIONS.ORGANIZATION_ID, Emailconfigurations.EMAILCONFIGURATIONS.JOURNEY_ID, Emailconfigurations.EMAILCONFIGURATIONS.RULE_ID, Emailconfigurations.EMAILCONFIGURATIONS.VERSION});
            ENTITIES_PKEY = createUniqueKey(Entities.ENTITIES, "Entities_pkey", new TableField[]{Entities.ENTITIES.ID});
            ENTITIES_ORGANIZATION_ID_CHANNEL_ID_NAME_KEY = createUniqueKey(Entities.ENTITIES, "entities_organization_id_channel_id_name_key", new TableField[]{Entities.ENTITIES.ORGANIZATION_ID, Entities.ENTITIES.CHANNEL_ID, Entities.ENTITIES.NAME});
            ENTITYGRAPHS_PKEY = createUniqueKey(Entitygraphs.ENTITYGRAPHS, "EntityGraphs_pkey", new TableField[]{Entitygraphs.ENTITYGRAPHS.ID});
            ENTITYINSTANCEEDGES_PKEY = createUniqueKey(Entityinstanceedges.ENTITYINSTANCEEDGES, "EntityInstanceEdges_pkey", new TableField[]{Entityinstanceedges.ENTITYINSTANCEEDGES.ID});
            ENTITYINSTANCES_PKEY = createUniqueKey(Entityinstances.ENTITYINSTANCES, "EntityInstances_pkey", new TableField[]{Entityinstances.ENTITYINSTANCES.ID});
            ENTITYTRAVELERMAP_PKEY = createUniqueKey(Entitytravelermap.ENTITYTRAVELERMAP, "EntityTravelerMap_pkey", new TableField[]{Entitytravelermap.ENTITYTRAVELERMAP.ID});
            EXECGUARDSTATE_PKEY = createUniqueKey(Execguardstate.EXECGUARDSTATE, "ExecGuardState_pkey", new TableField[]{Execguardstate.EXECGUARDSTATE.ID});
            SFFETCHRECORDS_PKEY = createUniqueKey(Fetchrecords.FETCHRECORDS, "SFFetchRecords_pkey", new TableField[]{Fetchrecords.FETCHRECORDS.ID});
            FIELDS_PKEY = createUniqueKey(Fields.FIELDS, "Fields_pkey", new TableField[]{Fields.FIELDS.ID});
            INTEGRATIONCONFIGS_PKEY = createUniqueKey(Integrationconfigs.INTEGRATIONCONFIGS, "IntegrationConfigs_pkey", new TableField[]{Integrationconfigs.INTEGRATIONCONFIGS.ID});
            PK_JOURNEYSTATES = createUniqueKey(Journeystates.JOURNEYSTATES, "pk_journeystates", new TableField[]{Journeystates.JOURNEYSTATES.JOURNEY_STATE_ID});
            JOURNEYSTATES_JOURNEY_STATE_NAME_KEY = createUniqueKey(Journeystates.JOURNEYSTATES, "JourneyStates_journey_state_name_key", new TableField[]{Journeystates.JOURNEYSTATES.JOURNEY_STATE_NAME});
            JOURNEYS_PKEY = createUniqueKey(Journeys.JOURNEYS, "Journeys_pkey", new TableField[]{Journeys.JOURNEYS.ID});
            PK_MAPS = createUniqueKey(Maps.MAPS, "pk_maps", new TableField[]{Maps.MAPS.ID});
            MILESTONES_PKEY = createUniqueKey(Milestones.MILESTONES, "Milestones_pkey", new TableField[]{Milestones.MILESTONES.ID});
            ORGANIZATIONS_PKEY = createUniqueKey(Organizations.ORGANIZATIONS, "Organizations_pkey", new TableField[]{Organizations.ORGANIZATIONS.ID});
            PICKLISTITEMS_PKEY = createUniqueKey(Picklistitems.PICKLISTITEMS, "PickListItems_pkey", new TableField[]{Picklistitems.PICKLISTITEMS.ID});
            RULES_PKEY = createUniqueKey(Rules.RULES, "Rules_pkey", new TableField[]{Rules.RULES.ID});
            SMILESTONES_PKEY = createUniqueKey(Smilestones.SMILESTONES, "Smilestones_pkey", new TableField[]{Smilestones.SMILESTONES.ID});
            SMILESTONES_MILESTONE_ID_VERSION_KEY = createUniqueKey(Smilestones.SMILESTONES, "Smilestones_milestone_id_version_key", new TableField[]{Smilestones.SMILESTONES.MILESTONE_ID, Smilestones.SMILESTONES.VERSION});
            STATICENTITYMAPSPECIFICATION_PKEY = createUniqueKey(Staticentitymapspecification.STATICENTITYMAPSPECIFICATION, "StaticEntityMapSpecification_pkey", new TableField[]{Staticentitymapspecification.STATICENTITYMAPSPECIFICATION.ID});
            PERORGEDGELABEL_UNIQUE = createUniqueKey(Staticentitymapspecification.STATICENTITYMAPSPECIFICATION, "PerOrgEdgeLabel_unique", new TableField[]{Staticentitymapspecification.STATICENTITYMAPSPECIFICATION.ORGANIZATION_ID, Staticentitymapspecification.STATICENTITYMAPSPECIFICATION.EDGE_LABEL});
            STATICENTITYMETADATA_PKEY = createUniqueKey(Staticentitymetadata.STATICENTITYMETADATA, "StaticEntityMetadata_pkey", new TableField[]{Staticentitymetadata.STATICENTITYMETADATA.ID});
            PK_TICKSCHEDULES = createUniqueKey(Tickschedules.TICKSCHEDULES, "pk_tickschedules", new TableField[]{Tickschedules.TICKSCHEDULES.ID});
            TRAVELERCHANNELS_PKEY = createUniqueKey(Travelerchannels.TRAVELERCHANNELS, "TravelerChannels_pkey", new TableField[]{Travelerchannels.TRAVELERCHANNELS.ID});
            TRAVELERRULESTATE_PKEY = createUniqueKey(Travelerrulestate.TRAVELERRULESTATE, "TravelerRuleState_pkey", new TableField[]{Travelerrulestate.TRAVELERRULESTATE.ID});
            STATUS_PKEY = createUniqueKey(Travelerstate.TRAVELERSTATE, "Status_pkey", new TableField[]{Travelerstate.TRAVELERSTATE.ID});
            UMTRANSACTIONS_PKEY = createUniqueKey(Umtransactions.UMTRANSACTIONS, "UMTransactions_pkey", new TableField[]{Umtransactions.UMTRANSACTIONS.ID});
            PK_ACTION_JOURNAL_STATUS = createUniqueKey(ActionJournalStatus.ACTION_JOURNAL_STATUS, "pk_action_journal_status", new TableField[]{ActionJournalStatus.ACTION_JOURNAL_STATUS.ACTION_JOURNAL_STATUS_ID});
            ACTION_JOURNAL_STATUS_ACTION_JOURNAL_STATUS_NAME_KEY = createUniqueKey(ActionJournalStatus.ACTION_JOURNAL_STATUS, "action_journal_status_action_journal_status_name_key", new TableField[]{ActionJournalStatus.ACTION_JOURNAL_STATUS.ACTION_JOURNAL_STATUS_NAME});
            PK_CUSTOMER_STATUS = createUniqueKey(CustomerStatus.CUSTOMER_STATUS, "pk_customer_status", new TableField[]{CustomerStatus.CUSTOMER_STATUS.CUSTOMER_STATUS_ID});
            CUSTOMER_STATUS_CUSTOMER_STATUS_NAME_KEY = createUniqueKey(CustomerStatus.CUSTOMER_STATUS, "customer_status_customer_status_name_key", new TableField[]{CustomerStatus.CUSTOMER_STATUS.CUSTOMER_STATUS_NAME});
            PK_FAQWAD_MESSAGES = createUniqueKey(FaqwadMessages.FAQWAD_MESSAGES, "pk_faqwad_messages", new TableField[]{FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_MESSAGE_ID});
            FAQWAD_UNIQUE_MESSAGE_TIMESTAMP_OFFSET_CONSTRAINT = createUniqueKey(FaqwadMessages.FAQWAD_MESSAGES, "faqwad_unique_message_timestamp_offset_constraint", new TableField[]{FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_QUEUE_DEFINITION_ID, FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_OBJECT_ID, FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_MESSAGE_TIMESTAMP, FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_MESSAGE_OFFSET});
            PK_FAQWAD_QUEUE_DEFINITIONS = createUniqueKey(FaqwadQueueDefinitions.FAQWAD_QUEUE_DEFINITIONS, "pk_faqwad_queue_definitions", new TableField[]{FaqwadQueueDefinitions.FAQWAD_QUEUE_DEFINITIONS.FAQWAD_QUEUE_DEFINITION_ID});
            FAQWAD_QUEUE_DEFINITIONS_FAQWAD_QUEUE_NAME_KEY = createUniqueKey(FaqwadQueueDefinitions.FAQWAD_QUEUE_DEFINITIONS, "faqwad_queue_definitions_faqwad_queue_name_key", new TableField[]{FaqwadQueueDefinitions.FAQWAD_QUEUE_DEFINITIONS.FAQWAD_QUEUE_NAME});
            PK_FAQWAD_STATES = createUniqueKey(FaqwadStates.FAQWAD_STATES, "pk_faqwad_states", new TableField[]{FaqwadStates.FAQWAD_STATES.FAQWAD_STATE_ID});
            FAQWAD_STATES_FAQWAD_STATE_NAME_KEY = createUniqueKey(FaqwadStates.FAQWAD_STATES, "faqwad_states_faqwad_state_name_key", new TableField[]{FaqwadStates.FAQWAD_STATES.FAQWAD_STATE_NAME});
            PK_FAQWAD_TYPES = createUniqueKey(FaqwadTypes.FAQWAD_TYPES, "pk_faqwad_types", new TableField[]{FaqwadTypes.FAQWAD_TYPES.FAQWAD_TYPE_ID});
            FAQWAD_TYPES_FAQWAD_TYPE_NAME_KEY = createUniqueKey(FaqwadTypes.FAQWAD_TYPES, "faqwad_types_faqwad_type_name_key", new TableField[]{FaqwadTypes.FAQWAD_TYPES.FAQWAD_TYPE_NAME});
            PK_TRAVELER_EVENT_STATES = createUniqueKey(TravelerEventStates.TRAVELER_EVENT_STATES, "pk_traveler_event_states", new TableField[]{TravelerEventStates.TRAVELER_EVENT_STATES.TRAVELER_EVENT_STATE_ID});
            TRAVELER_EVENT_STATES_TRAVELER_EVENT_STATE_NAME_KEY = createUniqueKey(TravelerEventStates.TRAVELER_EVENT_STATES, "traveler_event_states_traveler_event_state_name_key", new TableField[]{TravelerEventStates.TRAVELER_EVENT_STATES.TRAVELER_EVENT_STATE_NAME});
            PK_TRAVELER_EVENT_TYPES = createUniqueKey(TravelerEventTypes.TRAVELER_EVENT_TYPES, "pk_traveler_event_types", new TableField[]{TravelerEventTypes.TRAVELER_EVENT_TYPES.TRAVELER_EVENT_TYPE_ID});
            TRAVELER_EVENT_TYPES_TRAVELER_EVENT_TYPE_NAME_KEY = createUniqueKey(TravelerEventTypes.TRAVELER_EVENT_TYPES, "traveler_event_types_traveler_event_type_name_key", new TableField[]{TravelerEventTypes.TRAVELER_EVENT_TYPES.TRAVELER_EVENT_TYPE_NAME});
            PK_TRAVELER_EVENTS = createUniqueKey(TravelerEvents.TRAVELER_EVENTS, "pk_traveler_events", new TableField[]{TravelerEvents.TRAVELER_EVENTS.TRAVELER_EVENT_ID});
            TE_UNIQUE_TRAVELER_TIMESTAMP_OFFSET_CONSTRAINT = createUniqueKey(TravelerEvents.TRAVELER_EVENTS, "te_unique_traveler_timestamp_offset_constraint", new TableField[]{TravelerEvents.TRAVELER_EVENTS.TRAVELER_ID, TravelerEvents.TRAVELER_EVENTS.TRAVELER_EVENT_TIMESTAMP, TravelerEvents.TRAVELER_EVENTS.TRAVELER_EVENT_OFFSET});
        }
    }

    private static class Identities0 extends AbstractKeys {
        public static Identity<ActionargsRecord, Long> IDENTITY_ACTIONARGS;
        public static Identity<ActionjournalRecord, Long> IDENTITY_ACTIONJOURNAL;
        public static Identity<ActionsRecord, Long> IDENTITY_ACTIONS;
        public static Identity<ChannelentitiesRecord, Long> IDENTITY_CHANNELENTITIES;
        public static Identity<ChannelsRecord, Long> IDENTITY_CHANNELS;
        public static Identity<CronstateRecord, Long> IDENTITY_CRONSTATE;
        public static Identity<EmailconfigurationsRecord, Long> IDENTITY_EMAILCONFIGURATIONS;
        public static Identity<EntitiesRecord, Long> IDENTITY_ENTITIES;
        public static Identity<EntitygraphsRecord, Long> IDENTITY_ENTITYGRAPHS;
        public static Identity<EntityinstanceedgesRecord, Long> IDENTITY_ENTITYINSTANCEEDGES;
        public static Identity<EntityinstancesRecord, Long> IDENTITY_ENTITYINSTANCES;
        public static Identity<EntitytravelermapRecord, Long> IDENTITY_ENTITYTRAVELERMAP;
        public static Identity<ExecguardstateRecord, Long> IDENTITY_EXECGUARDSTATE;
        public static Identity<FetchrecordsRecord, Long> IDENTITY_FETCHRECORDS;
        public static Identity<FieldsRecord, Long> IDENTITY_FIELDS;
        public static Identity<IntegrationconfigsRecord, Long> IDENTITY_INTEGRATIONCONFIGS;
        public static Identity<JourneystatesRecord, Long> IDENTITY_JOURNEYSTATES;
        public static Identity<JourneysRecord, Long> IDENTITY_JOURNEYS;
        public static Identity<MapsRecord, Long> IDENTITY_MAPS;
        public static Identity<MilestonesRecord, Long> IDENTITY_MILESTONES;
        public static Identity<OrganizationsRecord, Long> IDENTITY_ORGANIZATIONS;
        public static Identity<PicklistitemsRecord, Long> IDENTITY_PICKLISTITEMS;
        public static Identity<ProctriggersRecord, Long> IDENTITY_PROCTRIGGERS;
        public static Identity<RulesRecord, Long> IDENTITY_RULES;
        public static Identity<SmilestonesRecord, Long> IDENTITY_SMILESTONES;
        public static Identity<StaticentitymapspecificationRecord, Long> IDENTITY_STATICENTITYMAPSPECIFICATION;
        public static Identity<StaticentitymetadataRecord, Long> IDENTITY_STATICENTITYMETADATA;
        public static Identity<TickschedulesRecord, Long> IDENTITY_TICKSCHEDULES;
        public static Identity<TravelerchannelsRecord, Long> IDENTITY_TRAVELERCHANNELS;
        public static Identity<TravelerrulestateRecord, Long> IDENTITY_TRAVELERRULESTATE;
        public static Identity<TravelerstateRecord, Long> IDENTITY_TRAVELERSTATE;
        public static Identity<TravelersRecord, Long> IDENTITY_TRAVELERS;
        public static Identity<UmtransactionsRecord, Long> IDENTITY_UMTRANSACTIONS;
        public static Identity<ActionJournalStatusRecord, Long> IDENTITY_ACTION_JOURNAL_STATUS;
        public static Identity<CustomerStatusRecord, Long> IDENTITY_CUSTOMER_STATUS;
        public static Identity<FaqwadMessagesRecord, Long> IDENTITY_FAQWAD_MESSAGES;
        public static Identity<TravelerEventsRecord, Long> IDENTITY_TRAVELER_EVENTS;

        private Identities0() {
        }

        static {
            IDENTITY_ACTIONARGS = createIdentity(Actionargs.ACTIONARGS, Actionargs.ACTIONARGS.ID);
            IDENTITY_ACTIONJOURNAL = createIdentity(Actionjournal.ACTIONJOURNAL, Actionjournal.ACTIONJOURNAL.ID);
            IDENTITY_ACTIONS = createIdentity(Actions.ACTIONS, Actions.ACTIONS.ID);
            IDENTITY_CHANNELENTITIES = createIdentity(Channelentities.CHANNELENTITIES, Channelentities.CHANNELENTITIES.ID);
            IDENTITY_CHANNELS = createIdentity(Channels.CHANNELS, Channels.CHANNELS.ID);
            IDENTITY_CRONSTATE = createIdentity(Cronstate.CRONSTATE, Cronstate.CRONSTATE.ID);
            IDENTITY_EMAILCONFIGURATIONS = createIdentity(Emailconfigurations.EMAILCONFIGURATIONS, Emailconfigurations.EMAILCONFIGURATIONS.ID);
            IDENTITY_ENTITIES = createIdentity(Entities.ENTITIES, Entities.ENTITIES.ID);
            IDENTITY_ENTITYGRAPHS = createIdentity(Entitygraphs.ENTITYGRAPHS, Entitygraphs.ENTITYGRAPHS.ID);
            IDENTITY_ENTITYINSTANCEEDGES = createIdentity(Entityinstanceedges.ENTITYINSTANCEEDGES, Entityinstanceedges.ENTITYINSTANCEEDGES.ID);
            IDENTITY_ENTITYINSTANCES = createIdentity(Entityinstances.ENTITYINSTANCES, Entityinstances.ENTITYINSTANCES.ID);
            IDENTITY_ENTITYTRAVELERMAP = createIdentity(Entitytravelermap.ENTITYTRAVELERMAP, Entitytravelermap.ENTITYTRAVELERMAP.ID);
            IDENTITY_EXECGUARDSTATE = createIdentity(Execguardstate.EXECGUARDSTATE, Execguardstate.EXECGUARDSTATE.ID);
            IDENTITY_FETCHRECORDS = createIdentity(Fetchrecords.FETCHRECORDS, Fetchrecords.FETCHRECORDS.ID);
            IDENTITY_FIELDS = createIdentity(Fields.FIELDS, Fields.FIELDS.ID);
            IDENTITY_INTEGRATIONCONFIGS = createIdentity(Integrationconfigs.INTEGRATIONCONFIGS, Integrationconfigs.INTEGRATIONCONFIGS.ID);
            IDENTITY_JOURNEYSTATES = createIdentity(Journeystates.JOURNEYSTATES, Journeystates.JOURNEYSTATES.JOURNEY_STATE_ID);
            IDENTITY_JOURNEYS = createIdentity(Journeys.JOURNEYS, Journeys.JOURNEYS.ID);
            IDENTITY_MAPS = createIdentity(Maps.MAPS, Maps.MAPS.ID);
            IDENTITY_MILESTONES = createIdentity(Milestones.MILESTONES, Milestones.MILESTONES.ID);
            IDENTITY_ORGANIZATIONS = createIdentity(Organizations.ORGANIZATIONS, Organizations.ORGANIZATIONS.ID);
            IDENTITY_PICKLISTITEMS = createIdentity(Picklistitems.PICKLISTITEMS, Picklistitems.PICKLISTITEMS.ID);
            IDENTITY_PROCTRIGGERS = createIdentity(Proctriggers.PROCTRIGGERS, Proctriggers.PROCTRIGGERS.ID);
            IDENTITY_RULES = createIdentity(Rules.RULES, Rules.RULES.ID);
            IDENTITY_SMILESTONES = createIdentity(Smilestones.SMILESTONES, Smilestones.SMILESTONES.ID);
            IDENTITY_STATICENTITYMAPSPECIFICATION = createIdentity(Staticentitymapspecification.STATICENTITYMAPSPECIFICATION, Staticentitymapspecification.STATICENTITYMAPSPECIFICATION.ID);
            IDENTITY_STATICENTITYMETADATA = createIdentity(Staticentitymetadata.STATICENTITYMETADATA, Staticentitymetadata.STATICENTITYMETADATA.ID);
            IDENTITY_TICKSCHEDULES = createIdentity(Tickschedules.TICKSCHEDULES, Tickschedules.TICKSCHEDULES.ID);
            IDENTITY_TRAVELERCHANNELS = createIdentity(Travelerchannels.TRAVELERCHANNELS, Travelerchannels.TRAVELERCHANNELS.ID);
            IDENTITY_TRAVELERRULESTATE = createIdentity(Travelerrulestate.TRAVELERRULESTATE, Travelerrulestate.TRAVELERRULESTATE.ID);
            IDENTITY_TRAVELERSTATE = createIdentity(Travelerstate.TRAVELERSTATE, Travelerstate.TRAVELERSTATE.ID);
            IDENTITY_TRAVELERS = createIdentity(Travelers.TRAVELERS, Travelers.TRAVELERS.ID);
            IDENTITY_UMTRANSACTIONS = createIdentity(Umtransactions.UMTRANSACTIONS, Umtransactions.UMTRANSACTIONS.ID);
            IDENTITY_ACTION_JOURNAL_STATUS = createIdentity(ActionJournalStatus.ACTION_JOURNAL_STATUS, ActionJournalStatus.ACTION_JOURNAL_STATUS.ACTION_JOURNAL_STATUS_ID);
            IDENTITY_CUSTOMER_STATUS = createIdentity(CustomerStatus.CUSTOMER_STATUS, CustomerStatus.CUSTOMER_STATUS.CUSTOMER_STATUS_ID);
            IDENTITY_FAQWAD_MESSAGES = createIdentity(FaqwadMessages.FAQWAD_MESSAGES, FaqwadMessages.FAQWAD_MESSAGES.FAQWAD_MESSAGE_ID);
            IDENTITY_TRAVELER_EVENTS = createIdentity(TravelerEvents.TRAVELER_EVENTS, TravelerEvents.TRAVELER_EVENTS.TRAVELER_EVENT_ID);
        }
    }
}

