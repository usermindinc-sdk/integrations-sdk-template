apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: integrations-sdk-sdktemplate
  # Your namespace goes in here
  namespace: integrations
  labels:
    deployment: staging
  annotations:
    # BUILD_URL and PRODUCT_VERSION are provided by Jenkins
    jenkinsBuildURL: ${BUILD_URL}
    prodVersion: ${PRODUCT_VERSION}
    kubernetes.io/change-cause: ${PRODUCT_VERSION}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: integrations-sdk-sdktemplate
#      deployment: staging
  template:
    metadata:
      labels:
        # Your app
        app: integrations-sdk-sdktemplate
        deployment: staging
    spec:
      containers:
        - name: integrations-sdk-sdktemplate
          image: usermindinc/integrations-sdk-sdktemplate:${PRODUCT_VERSION}
          imagePullPolicy: Always
          env:
          # You will need one of these for each environement variable your app needs.
          # - name: ENV_VAR_NAME
          # specify value instead if it is not a secured value which should go in secrets.
          # valueFrom:
            # secretKeyRef:
              # name: <namespace>-secrets
              # This value can be anything it is simply the link between the secrets file and this file for the value
              # key: <key_for_env_var>
          volumeMounts:
          # This is for use with a config map where your configs differ between staging and prod, this is the mounth path.
          - name: integrations
            mountPath: /app/config

      # How we talk to docker hub to get our private containers.
      imagePullSecrets:
        - name: regsecret

      # Configmap setup
      volumes:
      - name: integrations
        configMap:
           name: integrations-sdk-sdktemplate-config
           items:
           - key: config-staging.yaml
             path: config.yaml
           - key: baseConfig.yaml
             path: baseConfig.yaml
